"use strict";(self.webpackChunkyun=self.webpackChunkyun||[]).push([[6193],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,f=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2352:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(4137));const o={title:"How to generate fake test data using faker?",last_update:{date:"01/05/2021",author:"Yun Ji"}},i=void 0,l={unversionedId:"python/generate-fake-test-data",id:"python/generate-fake-test-data",title:"How to generate fake test data using faker?",description:"---",source:"@site/docs/python/generate-fake-test-data.md",sourceDirName:"python",slug:"/python/generate-fake-test-data",permalink:"/docs/python/generate-fake-test-data",draft:!1,editUrl:"https://github.com/actuallyyun/blog/docs/python/generate-fake-test-data.md",tags:[],version:"current",lastUpdatedBy:"Yun Ji",lastUpdatedAt:1609804800,formattedLastUpdatedAt:"Jan 5, 2021",frontMatter:{title:"How to generate fake test data using faker?",last_update:{date:"01/05/2021",author:"Yun Ji"}},sidebar:"tutorialSidebar",previous:{title:"The most comprehensive guide to deploy Django projects with Heroku ",permalink:"/docs/python/deploy-django-project-to-heroku"},next:{title:"How to use python shell in terminal",permalink:"/docs/python/python-shell"}},p={},s=[{value:"categories: python",id:"categories-python",level:2},{value:"01",id:"01",level:3}],d={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,"layout: post\ntitle: 'How to generate test data for your Django projects'\nauthor: 'Yun Ji'\ndate: 2021-06-31"),(0,r.kt)("h2",{id:"categories-python"},"categories: python"),(0,r.kt)("p",null,"Before I looked into how to generate test data, I did it manually. That was laboring, repeatative and boring, like most manual work that can be anutomated.\nFor my last project, after some youtubing and goolging, I used random and faker to create test data, along with Django's BaseCommand class to create commands\nthat you can run to create data."),(0,r.kt)("p",null,"Let's get started!"),(0,r.kt)("h3",{id:"01"},"01"),(0,r.kt)("p",null,"In your project app file(for example, my project file is project4, my app is commerce, do this in your app file), create ",(0,r.kt)("inlineCode",{parentName:"p"},"management/commands"),",\nwithin the folder, create a file named ",(0,r.kt)("inlineCode",{parentName:"p"},"createdata.py"),".\nThis is what your directory should look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"polls/\n    __init__.py\n    models.py\n    management/\n        __init__.py\n        commands/\n            __init__.py\n            _private.py\n            crearedata.py\n    tests.py\n    views.py\n")),(0,r.kt)("p",null,"Let's import all the useful stuff:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"from django.core.management.base import BaseCommand\nfrom faker import Faker\nimport faker.providers\nfrom auctions.models import User, Listing, Bid, Comment, Watchlist\nimport random\n")),(0,r.kt)("p",null,"And install faker ",(0,r.kt)("inlineCode",{parentName:"p"},"pip install Faker")),(0,r.kt)("p",null,"We could use faker's provider library, on top of that, we could also create customed providers."),(0,r.kt)("p",null,"Let's test faker first."),(0,r.kt)("p",null,"This is the syntax to create Django Commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'class Command(BaseCommand):\n    help = "Command information"\n\n    def handle(self, *args, **kwargs):\n\n        fake = Faker()\n        print(fake.name())\n')),(0,r.kt)("p",null,"In your terminal, run the Django command ",(0,r.kt)("inlineCode",{parentName:"p"},"python manage.py createdata"),"\nIt should print out a random name. Mine is ",(0,r.kt)("inlineCode",{parentName:"p"},"Laura Kim")),(0,r.kt)("p",null,"Please refer to ",(0,r.kt)("a",{parentName:"p",href:"https://faker.readthedocs.io/en/master/index.html"},"Faker's documentation")))}u.isMDXComponent=!0}}]);